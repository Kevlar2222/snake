{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GRID_SIZE","SnakeHead","props","className","style","top","left","SnakeHead2","Food","food","App","randomBetween","min","max","Math","floor","random","state","alive","direction","headPosition","headStyle","xSpeed","ySpeed","foodPosition","foodStyle","tailList","alive2","direction2","headPosition2","headStyle2","xSpeed2","ySpeed2","tailList2","move","bind","changeDirection","placeFood","this","interval","setInterval","clearInterval","xPos","xPos2","yPos","yPos2","alert","forEach","tail","unshift","pop","setState","String","e","key","foodX","foodY","window","addEventListener","cell","html","size","i","j","push","map","el","idx","width","height","position","backgroundColor","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11ce25c3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst GRID_SIZE = 20;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alive: true,\n      direction: 'right',\n      headPosition: [0, 0],\n      headStyle: [0, 0],\n      xSpeed: 1,\n      ySpeed: 0,\n      foodPosition: [],\n      foodStyle: [],\n      tailList: [[0, 0], [0, 1], [0, 2]],\n      alive2: true,\n      direction2: 'left',\n      headPosition2: [GRID_SIZE - 1, GRID_SIZE - 1],\n      headStyle2: [0, 0],\n      xSpeed2: -1,\n      ySpeed2: 0,\n      tailList2: [[GRID_SIZE - 1, GRID_SIZE - 1], [GRID_SIZE - 1, GRID_SIZE - 2], [GRID_SIZE - 1, GRID_SIZE - 3]]\n    };\n    this.move = this.move.bind(this);\n    this.changeDirection = this.changeDirection.bind(this);\n    this.randomBetween = this.randomBetween.bind(this);\n    this.placeFood = this.placeFood.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.move();\n    }, 60);\n    this.placeFood();\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n  move () {\n    let xPos = this.state.headPosition[0] + this.state.xSpeed;\n    let xPos2 = this.state.headPosition2[0] + this.state.xSpeed2;\n    let yPos = this.state.headPosition[1] + this.state.ySpeed;\n    let yPos2 = this.state.headPosition2[1] + this.state.ySpeed2;\n    if(xPos < 0 || xPos >= GRID_SIZE){\n      alert(\"Player 1 hit the wall. Player 2 Wins!\");\n      clearInterval(this.interval);\n      return;\n    }\n    if(xPos2 < 0 || xPos2 >= GRID_SIZE){\n      alert(\"Player 2 hit the wall. Player 1 Wins!\");\n      clearInterval(this.interval);\n      return;\n    }\n    if(yPos < 0 || yPos >= GRID_SIZE){\n      clearInterval(this.interval);\n      alert(\"Player 1 hit the wall. Player 2 Wins!\");\n      return;\n    }\n    if(yPos2 < 0 || yPos2 >= GRID_SIZE){\n      clearInterval(this.interval);\n      alert(\"Player 2 hit the wall. Player 1 Wins!\");\n      return;\n    }\n    let tailList = [...this.state.tailList];\n    tailList.forEach(tail => { if(tail[0] === xPos && tail[1] === yPos){\n      alert(\"Player 1 crashed into a tail!\");\n      clearInterval(this.interval);\n      return;\n    }\n    if(tail[0] === xPos2 && tail[1] === yPos2){\n      alert(\"Player 2 crashed into a tail!\");\n      clearInterval(this.interval);\n      return;\n    }\n  });\n    let tailList2 = [...this.state.tailList2];\n    tailList2.forEach(tail => { if(tail[0] === xPos && tail[1] === yPos){\n      alert(\"Player 1 crashed into a tail!\");\n      clearInterval(this.interval);\n      return;\n    }\n    if(tail[0] === xPos2 && tail[1] === yPos2){\n      alert(\"Player 2 crashed into a tail!\");\n      clearInterval(this.interval);\n      return;\n    }\n  });\n    tailList.unshift([xPos, yPos]);\n    if(this.state.headPosition[0] === this.state.foodPosition[0] && this.state.headPosition[1] === this.state.foodPosition[1]){\n      this.placeFood();\n    } else {\n      tailList.pop();\n    }\n    tailList2.unshift([xPos2, yPos2]);\n    if(this.state.headPosition2[0] === this.state.foodPosition[0] && this.state.headPosition2[1] === this.state.foodPosition[1]){\n      this.placeFood();\n    } else {\n      tailList2.pop();\n    }\n    let direction;\n    let direction2;\n    this.state.xSpeed === 1 ? direction = 'right' : this.state.xSpeed === -1 ? direction = 'left' : this.state.ySpeed === 1 ? direction = 'down' : direction = 'up';\n    this.state.xSpeed2 === 1 ? direction2 = 'right' : this.state.xSpeed2 === -1 ? direction2 = 'left' : this.state.ySpeed2 === 1 ? direction2 = 'down' : direction2 = 'up';\n    this.setState({\n      headPosition: [xPos, yPos],\n      headStyle: [String(xPos * (80 / GRID_SIZE)) + \"vh\", String(yPos * (80 / GRID_SIZE)) + \"vh\"],\n      direction: direction,\n      tailList: tailList,\n      headPosition2: [xPos2, yPos2],\n      headStyle2: [String(xPos2 * (80 / GRID_SIZE)) + \"vh\", String(yPos2 * (80 / GRID_SIZE)) + \"vh\"],\n      direction2: direction2,\n      tailList2: tailList2,\n    });\n    if(xPos === xPos2 && yPos === yPos2){\n      alert(\"Head-on Collision!\");\n      clearInterval(this.interval);\n      return;\n    }\n  }\n\n  changeDirection (e) {\n    if(e.key === \"ArrowDown\" && this.state.direction !== 'up'){\n      this.setState({\n        xSpeed: 0,\n        ySpeed: 1\n      });\n    }\n    else if(e.key === \"ArrowUp\" && this.state.direction !== 'down'){\n      this.setState({\n        xSpeed: 0,\n        ySpeed: -1\n      });\n    }\n    else if(e.key === \"ArrowLeft\" && this.state.direction !== 'right'){\n      this.setState({\n        xSpeed: -1,\n        ySpeed: 0\n      });\n    }\n    else if(e.key === \"ArrowRight\" && this.state.direction !== 'left'){\n      this.setState({\n        xSpeed: 1,\n        ySpeed: 0\n      });\n    }\n    else if(e.key === \"s\" && this.state.direction2 !== 'up'){\n      this.setState({\n        xSpeed2: 0,\n        ySpeed2: 1\n      });\n    }\n    else if(e.key === \"w\" && this.state.direction2 !== 'down'){\n      this.setState({\n        xSpeed2: 0,\n        ySpeed2: -1\n      });\n    }\n    else if(e.key === \"a\" && this.state.direction2 !== 'right'){\n      this.setState({\n        xSpeed2: -1,\n        ySpeed2: 0\n      });\n    }\n    else if(e.key === \"d\" && this.state.direction2 !== 'left'){\n      this.setState({\n        xSpeed2: 1,\n        ySpeed2: 0\n      });\n    }\n  }\n\n  placeFood() {\n    let foodX = this.randomBetween(0, GRID_SIZE - 1);\n    let foodY = this.randomBetween(0, GRID_SIZE - 1);\n    this.setState({\n      foodPosition: [foodX, foodY],\n      foodStyle: [String(foodX * (80 / GRID_SIZE)) + \"vh\", String(foodY * (80 / GRID_SIZE)) + \"vh\"]   \n    });\n  }\n\n  render () {\n    window.addEventListener(\"keydown\", this.changeDirection);\n    const cell = <div className=\"cell\"></div>;\n    let html = [];\n    const size = String(80 / GRID_SIZE) + \"vh\";\n\n    for (let i = 0; i < GRID_SIZE; i++){\n      for(let j = 0; j < GRID_SIZE; j++){\n        html.push(cell);\n      }\n    }\n    let tailList = this.state.tailList.map((el, idx) => {\n      return <div style={{ width: size, height: size, position: 'absolute', left: String(el[0] * (80 / GRID_SIZE)) + \"vh\", top: String(el[1] * (80 / GRID_SIZE)) + \"vh\", backgroundColor: 'blue' }} />\n    });\n    let tailList2 = this.state.tailList2.map((el, idx) => {\n      return <div style={{ width: size, height: size, position: 'absolute', left: String(el[0] * (80 / GRID_SIZE)) + \"vh\", top: String(el[1] * (80 / GRID_SIZE)) + \"vh\", backgroundColor: 'purple' }} />\n    });\n    return (\n      <div className=\"gameBoard\">\n        {html}\n        {tailList}\n        {tailList2}\n        <SnakeHead style={this.state.headStyle}/>\n        <SnakeHead2 style={this.state.headStyle2}/>\n        <Food food={this.state.foodStyle}/>\n      </div>\n    );\n  }\n}\n\nfunction SnakeHead(props) {\n    return (\n      <div className=\"snakeHead\" style={{top: `${props.style[1]}`, left: `${props.style[0]}`}}></div>\n    );\n}\n\nfunction SnakeHead2(props) {\n  return (\n    <div className=\"snakeHead2\" style={{top: `${props.style[1]}`, left: `${props.style[0]}`}}></div>\n  );\n}\n\nfunction Food(props) {\n  return (\n    <div className=\"food\" style={{top: `${props.food[1]}`, left: `${props.food[0]}`}}></div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}