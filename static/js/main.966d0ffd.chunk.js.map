{"version":3,"sources":["music.mp3","explosion.mp3","splat.mp3","App.js","reportWebVitals.js","index.js"],"names":["GRID_SIZE","SnakeHead","props","className","style","top","left","SnakeHead2","display","Food","food","Start","onClick","toggle","click","instructions","Score","multi","p1","p2","Instructions","menu","App","randomBetween","min","max","Math","floor","random","state","music","gameover","players","speed","direction","headPosition","headStyle","xSpeed","ySpeed","foodPosition","foodStyle","tailList","move","bind","changeDirection","placeFood","startGame","playSplat","clearInterval","this","interval","ms","num","document","querySelectorAll","forEach","player","classList","contains","Number","textContent","setState","querySelector","direction2","headPosition2","headStyle2","xSpeed2","ySpeed2","tailList2","setInterval","getElementById","play","loop","splat","currentTime","xPos","xPos2","yPos","yPos2","p1Crashed","p2Crashed","tail","unshift","pop","String","explosion","e","key","foodX","foodY","target","remove","add","window","addEventListener","cell","html","size","i","j","push","map","el","idx","width","height","zIndex","position","backgroundColor","id","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.966d0ffd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/music.0d1552d6.mp3\";","export default __webpack_public_path__ + \"static/media/explosion.7fc51111.mp3\";","export default __webpack_public_path__ + \"static/media/splat.8eeec0de.mp3\";","import { findAllByTestId } from '@testing-library/react';\nimport React from 'react';\nimport './App.css';\nimport music from './music.mp3';\nimport explosion from './explosion.mp3';\nimport splat from './splat.mp3';\n\nconst GRID_SIZE = 20;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      music: true,\n      gameover: false,\n      players: 1,\n      speed: 60,\n      direction: 'right',\n      headPosition: [0, 0],\n      headStyle: [0, 0],\n      xSpeed: 1,\n      ySpeed: 0,\n      foodPosition: [],\n      foodStyle: [],\n      tailList: [[0, 0], [0, 1], [0, 2]],\n      multi: false,\n      p1: 0,\n    };\n    this.move = this.move.bind(this);\n    this.changeDirection = this.changeDirection.bind(this);\n    this.randomBetween = this.randomBetween.bind(this);\n    this.placeFood = this.placeFood.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.instructions = this.instructions.bind(this);\n    this.menu = this.menu.bind(this);\n    this.playSplat = this.playSplat.bind(this);\n  }\n\n  componentDidMount() {\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n  startGame() {                                               //Get number of players and speed settings, hide menu, setup second snake, start interval.\n    let ms;\n    let num;\n    const players = document.querySelectorAll('.players');\n    players.forEach(player => {\n      if(player.classList.contains('selected')){\n        num = Number(player.textContent);\n        this.setState({\n          players: num,\n          gameover: false\n      });\n      }\n    });\n    const speed = document.querySelectorAll('.speed');\n    speed.forEach(speed => {\n      if(speed.classList.contains('selected')){\n        ms = speed.textContent === \"Fast\" ? 60 : speed.textContent === \"Medium\" ? 120 : 240;\n        this.setState({speed: ms});\n      }\n    });\n    document.querySelector('.options').style.display = \"none\";\n    document.querySelector('.instructions').style.display = \"none\";\n    if(num === 1){\n      this.setState({\n        multi: false\n      });\n    }\n    if(num === 2){\n      this.setState({\n        multi: true,\n        direction2: 'left',\n        headPosition2: [GRID_SIZE - 1, GRID_SIZE - 1],\n        headStyle2: [0, 0],\n        xSpeed2: -1,\n        ySpeed2: 0,\n        tailList2: [[GRID_SIZE - 1, GRID_SIZE - 1], [GRID_SIZE - 1, GRID_SIZE - 2], [GRID_SIZE - 1, GRID_SIZE - 3]],\n        p2: 0\n      });\n    }\n    this.interval = setInterval(() => {\n      this.move();\n    }, ms);\n    this.placeFood();\n    if(music){\n      const music = document.getElementById('music');\n      music.play();\n      music.loop = true;\n    }\n  }\n\n  playSplat() {\n    if(music){\n      const splat = document.getElementById('splat');\n      splat.currentTime = 0;\n      splat.play();\n    }\n  }\n\n  move () {                                                           //move snake(s) one square, check for collisions, update page\n    if(this.state.multi){                                             //multi = 2 snakes\n      let xPos = this.state.headPosition[0] + this.state.xSpeed;\n      let xPos2 = this.state.headPosition2[0] + this.state.xSpeed2;\n      let yPos = this.state.headPosition[1] + this.state.ySpeed;\n      let yPos2 = this.state.headPosition2[1] + this.state.ySpeed2;\n      let p1Crashed = false;\n      let p2Crashed = false;\n      if(xPos < 0 || xPos >= GRID_SIZE){                              //e.g. player1 hit the wall\n        p1Crashed = true;\n      }\n      if(xPos2 < 0 || xPos2 >= GRID_SIZE){\n        p2Crashed = true;\n      }\n      if(yPos < 0 || yPos >= GRID_SIZE){\n        p1Crashed = true;\n      }\n      if(yPos2 < 0 || yPos2 >= GRID_SIZE){\n        p2Crashed = true;\n      }\n      let tailList = [...this.state.tailList];\n      tailList.forEach(tail => { if(tail[0] === xPos && tail[1] === yPos){\n        p1Crashed = true;\n      }\n      if(tail[0] === xPos2 && tail[1] === yPos2){\n        p2Crashed = true;\n      }\n    });\n      let tailList2 = [...this.state.tailList2];\n      tailList2.forEach(tail => { if(tail[0] === xPos && tail[1] === yPos){\n        p1Crashed = true;\n      }\n      if(tail[0] === xPos2 && tail[1] === yPos2){\n        p2Crashed = true;\n      }\n    });\n    if(p1Crashed){\n      clearInterval(this.interval);\n      if(p2Crashed){\n        this.playSplat();\n        this.setState({\n          gameover: true,\n          p1: this.state.p1 + 3,\n          p2: this.state.p2 + 3\n        });\n        return;\n      } else {\n        this.playSplat();\n        this.setState({\n          gameover: true,\n          p2: this.state.p2 + 3\n        });\n        return;\n      }\n    } else if(p2Crashed){\n      clearInterval(this.interval);\n      this.playSplat();\n      this.setState({\n        gameover: true,\n        p1: this.state.p1 + 3\n      });\n      return;\n    }\n      tailList.unshift([xPos, yPos]);                               // Add current head position to start of tail list array\n      if(this.state.headPosition[0] === this.state.foodPosition[0] && this.state.headPosition[1] === this.state.foodPosition[1]){\n        this.placeFood();                                           // Ate the food, randomly place another\n        this.setState({p1: this.state.p1 + 1});                     // +1 pt\n      } else {\n        tailList.pop();                                             // If didn't eat food, remove last entry of tail list array\n      }\n      tailList2.unshift([xPos2, yPos2]);\n      if(this.state.headPosition2[0] === this.state.foodPosition[0] && this.state.headPosition2[1] === this.state.foodPosition[1]){\n        this.placeFood();\n        this.setState({p2: this.state.p2 + 1});\n      } else {\n        tailList2.pop();\n      }\n      let direction;\n      let direction2;                                               // Set direction, position etc in state\n      this.state.xSpeed === 1 ? direction = 'right' : this.state.xSpeed === -1 ? direction = 'left' : this.state.ySpeed === 1 ? direction = 'down' : direction = 'up';\n      this.state.xSpeed2 === 1 ? direction2 = 'right' : this.state.xSpeed2 === -1 ? direction2 = 'left' : this.state.ySpeed2 === 1 ? direction2 = 'down' : direction2 = 'up';\n      this.setState({\n        headPosition: [xPos, yPos],\n        headStyle: [String(xPos * (80 / GRID_SIZE)) + \"vh\", String(yPos * (80 / GRID_SIZE)) + \"vh\"],\n        direction: direction,\n        tailList: tailList,\n        headPosition2: [xPos2, yPos2],\n        headStyle2: [String(xPos2 * (80 / GRID_SIZE)) + \"vh\", String(yPos2 * (80 / GRID_SIZE)) + \"vh\"],\n        direction2: direction2,\n        tailList2: tailList2,\n      });\n      if(xPos === xPos2 && yPos === yPos2){                         // Head on collision\n        clearInterval(this.interval);\n        if(music){\n          const explosion = document.getElementById('explosion');\n          explosion.currentTime = 0;\n          explosion.play();\n        }\n        this.setState({gameover: true});\n        return;\n      }\n  } else {                                                          //Single player game loop\n      let xPos = this.state.headPosition[0] + this.state.xSpeed;\n      let yPos = this.state.headPosition[1] + this.state.ySpeed;\n      if(xPos < 0 || xPos >= GRID_SIZE){\n        clearInterval(this.interval);\n        this.playSplat();\n        this.setState({gameover: true});\n        return;\n      }\n      if(yPos < 0 || yPos >= GRID_SIZE){\n        clearInterval(this.interval);\n        this.playSplat();\n        this.setState({gameover: true});\n        return;\n      }\n      let tailList = [...this.state.tailList];\n      tailList.forEach(tail => { if(tail[0] === xPos && tail[1] === yPos){\n        clearInterval(this.interval);\n        this.playSplat();\n        this.setState({gameover: true});\n        return;\n      }\n    });\n      tailList.unshift([xPos, yPos]);\n      if(this.state.headPosition[0] === this.state.foodPosition[0] && this.state.headPosition[1] === this.state.foodPosition[1]){\n        this.placeFood();\n        this.setState({p1: this.state.p1 + 1});\n      } else {\n        tailList.pop();\n      }\n      let direction;\n      this.state.xSpeed === 1 ? direction = 'right' : this.state.xSpeed === -1 ? direction = 'left' : this.state.ySpeed === 1 ? direction = 'down' : direction = 'up';\n      this.setState({\n        headPosition: [xPos, yPos],\n        headStyle: [String(xPos * (80 / GRID_SIZE)) + \"vh\", String(yPos * (80 / GRID_SIZE)) + \"vh\"],\n        direction: direction,\n        tailList: tailList\n      });\n  }\n  }\n\n  changeDirection (e) {\n    if(e.key === \"ArrowDown\" && this.state.direction !== 'up'){                 // e.g. Cannot change direction to down if currently moving up\n      this.setState({\n        xSpeed: 0,\n        ySpeed: 1\n      });\n    }\n    else if(e.key === \"ArrowUp\" && this.state.direction !== 'down'){\n      this.setState({\n        xSpeed: 0,\n        ySpeed: -1\n      });\n    }\n    else if(e.key === \"ArrowLeft\" && this.state.direction !== 'right'){\n      this.setState({\n        xSpeed: -1,\n        ySpeed: 0\n      });\n    }\n    else if(e.key === \"ArrowRight\" && this.state.direction !== 'left'){\n      this.setState({\n        xSpeed: 1,\n        ySpeed: 0\n      });\n    }\n    else if(this.state.multi && e.key === \"s\" && this.state.direction2 !== 'up'){\n      this.setState({\n        xSpeed2: 0,\n        ySpeed2: 1\n      });\n    }\n    else if(this.state.multi && e.key === \"w\" && this.state.direction2 !== 'down'){\n      this.setState({\n        xSpeed2: 0,\n        ySpeed2: -1\n      });\n    }\n    else if(this.state.multi && e.key === \"a\" && this.state.direction2 !== 'right'){\n      this.setState({\n        xSpeed2: -1,\n        ySpeed2: 0\n      });\n    }\n    else if(this.state.multi && e.key === \"d\" && this.state.direction2 !== 'left'){\n      this.setState({\n        xSpeed2: 1,\n        ySpeed2: 0\n      });\n    }\n    else if(this.state.gameover && e.key === \"p\"){                                              // Continue playing with same settings and carry over score\n      if(this.state.multi){\n        this.setState({\n          gameover: false,\n          direction: 'right',\n          headPosition: [0, 0],\n          headStyle: [0, 0],\n          xSpeed: 1,\n          ySpeed: 0,\n          foodPosition: [],\n          foodStyle: [],\n          tailList: [[0, 0], [0, 1], [0, 2]],\n          direction2: 'left',\n          headPosition2: [GRID_SIZE - 1, GRID_SIZE - 1],\n          headStyle2: [0, 0],\n          xSpeed2: -1,\n          ySpeed2: 0,\n          tailList2: [[GRID_SIZE - 1, GRID_SIZE - 1], [GRID_SIZE - 1, GRID_SIZE - 2], [GRID_SIZE - 1, GRID_SIZE - 3]]\n        });\n        this.interval = setInterval(() => {\n          this.move();\n        }, this.state.speed);\n        this.placeFood();\n      } else {\n        this.setState({\n          gameover: false,\n          direction: 'right',\n          headPosition: [0, 0],\n          headStyle: [0, 0],\n          xSpeed: 1,\n          ySpeed: 0,\n          foodPosition: [],\n          foodStyle: [],\n          tailList: [[0, 0], [0, 1], [0, 2]],\n      });\n      this.interval = setInterval(() => {\n        this.move();\n      }, this.state.speed);\n      this.placeFood();\n    }\n  } else if(this.state.gameover && e.key === \"q\"){                                        // Reset score and change settings\n    document.querySelector('.options').style.display = \"block\";\n    document.querySelector('.instructions').style.display = \"none\";\n    this.setState({\n      gameover: false,\n      direction: 'right',\n      headPosition: [0, 0],\n      headStyle: [0, 0],\n      xSpeed: 1,\n      ySpeed: 0,\n      foodPosition: [],\n      foodStyle: [],\n      tailList: [[0, 0], [0, 1], [0, 2]],\n      p1: 0,\n      direction2: 'left',\n      headPosition2: [GRID_SIZE - 1, GRID_SIZE - 1],\n      headStyle2: [0, 0],\n      xSpeed2: -1,\n      ySpeed2: 0,\n      tailList2: [[GRID_SIZE - 1, GRID_SIZE - 1], [GRID_SIZE - 1, GRID_SIZE - 2], [GRID_SIZE - 1, GRID_SIZE - 3]],\n      p2: 0\n    });\n    \n  }\n}\n\n  placeFood() {\n    let foodX = this.randomBetween(0, GRID_SIZE - 1);\n    let foodY = this.randomBetween(0, GRID_SIZE - 1);\n    this.setState({\n      foodPosition: [foodX, foodY],\n      foodStyle: [String(foodX * (80 / GRID_SIZE)) + \"vh\", String(foodY * (80 / GRID_SIZE)) + \"vh\"]   \n    });\n  }\n\n  toggle(e) {                                                           // Change colour of selected menu buttons\n    if(e.target.classList.contains(\"players\")){\n      const players = document.querySelectorAll('.players');\n      players.forEach(player => player.classList.remove('selected'));\n      e.target.classList.add('selected');\n    } else {\n      const speed = document.querySelectorAll('.speed');\n      speed.forEach(speed => speed.classList.remove('selected'));\n      e.target.classList.add('selected');\n    }\n  }\n\n  instructions() {\n    document.querySelector('.options').style.display = \"none\";\n    document.querySelector('.instructions').style.display = \"block\";\n  }\n\n  menu() {\n    document.querySelector('.options').style.display = \"block\";\n    document.querySelector('.instructions').style.display = \"none\";\n  }\n\n  render () {\n    window.addEventListener(\"keydown\", this.changeDirection);\n    const cell = <div className=\"cell\"></div>;\n    let html = [];\n    const size = String(80 / GRID_SIZE) + \"vh\";\n\n    for (let i = 0; i < GRID_SIZE; i++){                                //Setup grid\n      for(let j = 0; j < GRID_SIZE; j++){\n        html.push(cell);\n      }\n    }                                                                   //Render tails\n    let tailList = this.state.tailList.map((el, idx) => {\n      return <div style={{ width: size, height: size, zIndex: 1, position: 'absolute', left: String(el[0] * (80 / GRID_SIZE)) + \"vh\", top: String(el[1] * (80 / GRID_SIZE)) + \"vh\", backgroundColor: 'blue' }} />\n    });\n    let tailList2;\n    if(this.state.multi){\n      tailList2 = this.state.tailList2.map((el, idx) => {\n        return <div style={{ width: size, height: size, zIndex: 1, position: 'absolute', left: String(el[0] * (80 / GRID_SIZE)) + \"vh\", top: String(el[1] * (80 / GRID_SIZE)) + \"vh\", backgroundColor: 'purple' }} />\n      });\n\n    }\n    \n    return (\n      <div className=\"container\">\n        <audio id=\"music\" className=\"audio-element\">\n          <source src={music}></source>\n        </audio>\n        <audio id=\"splat\" className=\"audio-element\">\n          <source src={splat}></source>\n        </audio>\n        <audio id=\"explosion\" className=\"audio-element\">\n          <source src={explosion}></source>\n        </audio>\n        <div className=\"gameBoard\">\n          {html}\n          {tailList}\n          {tailList2}\n          <SnakeHead style={this.state.headStyle}/>\n          <SnakeHead2 display={this.state.multi} style={this.state.headStyle2}/>\n          <Food food={this.state.foodStyle}/>\n        </div>\n        <Start toggle={this.toggle} click={this.startGame} instructions={this.instructions}/>\n        <Score p1={this.state.p1} p2={this.state.p2} multi={this.state.multi}/>\n        <Instructions menu={this.menu}/>\n      </div>\n    );\n  }\n}\n\nfunction SnakeHead(props) {\n    return (\n      <div className=\"snakeHead\" style={{top: `${props.style[1]}`, left: `${props.style[0]}`}}></div>\n    );\n}\n\nfunction SnakeHead2(props) {\n  if(props.display){\n    return (\n      <div className=\"snakeHead2\" style={{top: `${props.style[1]}`, left: `${props.style[0]}`}}></div>\n    );\n  } else {\n    return (<div style={{display: \"none\"}}></div>);\n  }\n}\n\nfunction Food(props) {\n  return (\n    <div className=\"food\" style={{top: `${props.food[1]}`, left: `${props.food[0]}`}}></div>\n  )\n}\n\nfunction Start(props) {\n  return (\n  <div className=\"options\">\n    <div className=\"heading\">Number of Players:</div>\n    <div className=\"flex\">\n      <button onClick={props.toggle} className=\"button players selected\">1</button>\n      <button onClick={props.toggle} className=\"button players\">2</button>\n    </div>\n    \n    <div className=\"heading\">Speed:</div>\n    <div className=\"flex\">\n      <button onClick={props.toggle} className=\"button speed\">Slow</button>\n      <button onClick={props.toggle} className=\"button speed\">Medium</button>\n      <button onClick={props.toggle} className=\"button speed selected\">Fast</button>\n    </div>\n\n    <div className=\"flex\">\n      <button onClick={props.click} className=\"button start\">Start</button>\n    </div>\n    <button className=\"instructionButton\" onClick={props.instructions}>Instructions</button>\n  </div>\n  );\n}\n\nfunction Score(props) {\n  if(props.multi){\n    return(\n    <div className=\"scores\">\n    Scores:\n      <div className=\"pl\">Player 1: {props.p1}</div>\n      <div className=\"pl\">Player 2: {props.p2}</div>\n    </div>\n    );\n  } else {\n  return(\n    <div className=\"scores\">\n    Scores:\n      <div className=\"pl\">Player 1: {props.p1}</div>\n    </div>\n    );\n  }\n}\n\nfunction Instructions(props) {\n  return (\n    <div className=\"instructions\">\n      <div className=\"bigger\">Instructions</div>\n      <div>\n        Player 1:\n        <br></br>\n        - Start position = top left, moving right\n        <br></br>\n        - Controls = arrow keys\n        <br></br>\n        <br></br>\n\n        Player 2:\n        <br></br>\n        - Start position = bottom right, moving left\n        <br></br>\n        - Controls = WASD\n        <br></br>\n        <br></br>\n\n        Game over:\n        <br></br>\n        - Press p to continue playing with the same settings and score carried over\n        <br></br>\n        - Press q to quit to menu, reset score and change settings\n        <br></br>\n        <br></br>\n\n        Scoring:\n        <br></br>\n        - 1 point for eating the food\n        <br></br>\n        - 3 points if your opponent crashes\n      </div>\n      <button className='instructionButton' onClick={props.menu}>Okay</button>\n    </div>\n    \n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}